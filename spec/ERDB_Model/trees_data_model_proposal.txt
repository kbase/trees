

This is a working draft of a proposed schema for a CDM extension to support Trees
and Multiple sequence alignments.


Alignment
=====================================
-id (will be unique kbase id: 'kb|ali.XXXXX')
-fasta_alignment (file/blob)
-n_rows (number of rows in the alignment)
-active (either boolean or for our own reference, a version number)
-is_concatenation (boolean value that indicates if leaves map to single sequences, or multiple sequences)
-is_protein (bool)
-timestamp
-method (string that either maps to another dataase, to capture workflows, or is a simple method name)
-parameters (hash that stores parameter values used in the alignment)
-metadata ("key1:val1,key2:val2,...", e.g. name, human readable description, etc)
-protocol (human readable, how did you get here with these sequences? could also map to a separate table)
-source_db (for indicating, if needed, where this alignment originated from, eg MO, SEED)
-source_db_id (for indicating the ID in the db where this alignment originated from)



AlignmentRowComponent
=====================================
-id (will be unique kbase id: 'kb|ali.XXXXX.row.XXX.XXX')
-alignment_id 
-alignment_row (row number in alignment)
-concatenation_order (ordering starting from left to right in alignment row)
-label (text description copied from original fasta file)
-sequence_id (MD5 for protein, probably contigChunk for DNA/RNA)
-kbase_id (kbaseID for the sequence that was actually used in the alignment)
-source_sequence_id
-begin (if given, the alignment includes the portion of the original sequence that starts at this postion in the original sequence)
-end (if given, the alignment includes the portion of the original sequence that ends at this postion in the original sequence)
-start_pos_in_alignment (integer value providing a coordinate/mapping to the starting column in the alignment where this sequence component begins)
-end_pos_in_alignment (integer value providing a coordinate/mapping to the ending column in the alignment where this sequence component ends)


Tree
=====================================
-id (will be a unique kbase id:  e.g. 'kb|tree.XXXX')
-newick_tree (file/blob, leaf nodes provide a key into the AlignmentRowComponent table)
-alignment_id
-metadata ("key1:val1,key2:val2,...", e.g. name, human readable description, etc)
-timestamp
-active (either boolean or for our own reference, a version number)
-method
-parameters
-protocol
-source_db (for indicating, if needed, where this alignment originated from, eg MO, SEED)
-source_db_id (for indicating the ID in the db where this alignment originated from)


==== Computed Tables for Performance ???

Alignment2Tree
-alignmentID
-treeID

Domain2Alignment
-domainID
-alignmentID
-isComplete

Protein2Alignment
-MD5
-alignmentID
-isComplete

ContigChunk2Alignment
-contigChunkID
-alignmentID
-isComplete
